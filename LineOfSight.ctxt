#BlueJ class context
comment0.target=LineOfSight
comment0.text=\r\n\ Write\ a\ description\ of\ class\ LineOfSight\ here.\ \r\n\ \r\n\ @author\ (your\ name)\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=owner
comment1.target=LineOfSight(Enemy)
comment1.text=\r\n\ Constructor\ de\ los,\ necesita\ de\ un\ enemigo\ que\ ser\u00E1\ el\ poseedor\ de\ la\ misma\r\n\ Se\ asignan\ diversos\ datos\ con\ la\ informacion\ del\ enemigo\r\n
comment2.params=
comment2.target=void\ addToWorld()
comment2.text=\r\n\ Se\ a\u00F1ade\ al\ mundo\ frente\ a\ la\ posicion\ de\ su\ due\u00F1o\r\n
comment3.params=
comment3.target=void\ act()
comment4.params=
comment4.target=java.util.List\ losClear()
comment4.text=\r\n\ Revisa\ las\ clases\ con\ las\ que\ intersecta,\ si\ detecta\ solamente\ un\ heroe,\ se\ activa\ el\ seguimiento\r\n\ del\ enemigo,\ si\ detecta\ un\ heroe\ y\ una\ pared,\ se\ calcula\ quien\ esta\ m\u00E1s\ cerca\ para\ determinar\ si\ en\ realidad\r\n\ se\ ve\ al\ enemigo\ o\ no\r\n
comment5.params=actor
comment5.target=double\ calDistance(greenfoot.Actor)
comment5.text=\r\n\ Se\ usa\ el\ teorema\ de\ Pitagoras\ para\ calcular\ la\ distancia\ entre\ dos\ Actores\r\n
comment6.params=sprite
comment6.target=void\ setOrientation(int)
comment6.text=\r\n\ Se\ reescala\ la\ imagen\ para\ coincidir\ con\ hacia\ donde\ ve\ el\ enemigo\r\n\ Ademas\ de\ modificar\ su\ posicion\ para\ seguirlo\r\n
numComments=7
